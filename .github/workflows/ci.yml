name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - master

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.2.0
        with:
          paths: '[".github/workflows/ci.yml", "Sources/**", "Tests/**", "Package.*", "Externals"]'
          do_not_skip: '["push", "workflow_dispatch", "schedule"]'

  run-danger:
    name: Run Danger
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v2
    - name: Install danger-js
      run: brew install danger/tap/danger-js
    - run: swift test
    - run: swift run danger-swift ci --verbose --failOnErrors
      if: ${{ github.event_name == 'pull_request' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # build-windows-executable:
  #   name: Build Windows Executable
  #   runs-on: windows-latest
  #   steps:
  #     - uses: compnerd/gha-setup-swift@main
  #       with:
  #         branch: swift-5.6-release
  #         tag: 5.6-RELEASE
  #     - uses: actions/checkout@v2
  #     - run: git config --global core.protectNTFS false
  #     - run: swift build -c release --static-swift-stdlib --product docgen
  #     - run: cmd /r dir /s /b /o:gn
  #     - run: cp .build\release\docgen.exe docgen.exe
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: docgen-windows.exe
  #         path: docgen.exe

  # build-executables:
  #   name: Build Ubuntu
  #   runs-on: macos-12
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Install cross-compiler tool
  #     run: brew install keith/formulae/swiftpm-linux-cross
  #   - name: Setup toolchain
  #     run: setup-swiftpm-toolchain --ubuntu-release focal --arch x86_64 --swift-version 5.6.2
  #   - uses: swift-actions/setup-swift@v1
  #     with:
  #       swift-version: "5.6.2"
  #   - name: Cross compile
  #     run: TOOLCHAINS=$(/usr/libexec/PlistBuddy -c "print :CFBundleIdentifier" /Users/runner/hostedtoolcache/swift-macOS/5.6.2/x64/Info.plist) swift build -c release --product docgen --static-swift-stdlib --destination toolchain-focal-x86_64-5.6.2/destination_static.json

  swiftpm_linux:
    name: SwiftPM, Linux
    needs: filter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - swift:5.7
      fail-fast: false
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v3
        if: ${{ needs.filter.outputs.should_skip != 'true' }}
      - run: swift build -Xswiftc -suppress-warnings -c release --static-swift-stdlib --product docgen
        if: ${{ needs.filter.outputs.should_skip != 'true' }}
      - run: cp .build/release/docgen docgen
      - uses: actions/upload-artifact@v3
        with:
          name: docgen-linux
          path: docgen

  swiftpm_darwin:
    name: SwiftPM, Darwin, Xcode ${{ matrix.xcode }}
    needs: filter
    runs-on: macos-12
    strategy:
      matrix:
        xcode: ["14.0.1"]
      fail-fast: false
    env:
      DEVELOPER_DIR: "/Applications/Xcode_${{ matrix.xcode }}.app"
    steps:
      - uses: actions/checkout@v3
        if: ${{ needs.filter.outputs.should_skip != 'true' }}
      - run: swift build -Xswiftc -suppress-warnings -c release --static-swift-stdlib --product docgen
        if: ${{ needs.filter.outputs.should_skip != 'true' }}
      - run: cp .build/release/docgen docgen
      - uses: actions/upload-artifact@v3
        with:
          name: docgen-macos
          path: docgen
